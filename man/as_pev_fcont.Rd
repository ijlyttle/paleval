% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/continuous.R
\name{as_pev_fcont}
\alias{as_pev_fcont}
\title{Continuous-palette function}
\usage{
as_pev_fcont(pev_fcont)
}
\arguments{
\item{pev_fcont}{\code{function}, when called with a numeric vector with values
between 0 and 1, returns the corresponding (hex-code) values.}
}
\value{
\code{function} with S3 class \code{pev_fcont},
when called with a numeric vector with values between 0 and 1,
returns the corresponding (hex-code) values.
}
\description{
A continuous-palette function takes a vector of numbers, each between
0 and 1, and returns a vector of character strings, each containing the
correpsonding hex-code. You con use a continuous palette-function to
build a custom ggplot2 scale, using \code{\link[ggplot2:continuous_scale]{ggplot2::continuous_scale()}}.
}
\details{
These functions help you build, modify, and compose continuous-palette
functions. By working with functions, rather than with a finite set of
hex-colors, we can avoid interpolation-errors as we compose and rescale.

The functions are:

\describe{
\item{\code{as_pev_fcont()}}{Coerce function to continuous-palette function}
\item{\code{\link[=pev_fcont_hcl]{pev_fcont_hcl()}}}{Create continuous-palette function from HCL parameters}
\item{\code{\link[=pev_fcont_cvd]{pev_fcont_cvd()}}}{Modify output to simulate color-vision deficiency}
\item{\code{\link[=pev_fcont_rescale]{pev_fcont_rescale()}}}{Rescale input to continuous-palette function}
\item{\code{\link[=pev_fcont_reverse]{pev_fcont_reverse()}}}{Reverse palette-function}
\item{\code{\link[=pev_fcont_diverging]{pev_fcont_diverging()}}}{Create a diverging-palette function from two functions}
}
}
\examples{
  # Define HCL parameters for palette functions
  pals <- pev_map_hcl_param(
    colorspace::hcl_palettes(palette = c("Purples 3", "Greens 3"))
  )

  # Create palette functions
  fcont_purple <- pev_fcont_hcl(pals[["Purples 3"]])
  fcont_green <- pev_fcont_hcl(pals[["Greens 3"]])

  # Use pallete function to return hex-code
  fcont_purple(1)

  # printing the function prints the palette itself
  fcont_purple
  fcont_green

  # Modify palette functions
  pev_fcont_reverse(fcont_purple)
  pev_fcont_rescale(fcont_purple, limits = c(0.25, 0.75))

  # Create diverging-palette function
  fcont_purple_green <- pev_fcont_diverging(fcont_purple, fcont_green)
  fcont_purple_green

  # Modify palette function to simulate color-vision deficiency
  pev_fcont_cvd(fcont_purple_green, type = "deutan")
}
